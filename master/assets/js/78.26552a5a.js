(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{495:function(n,t,a){"use strict";a.r(t);var o=a(4),e=Object(o.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"fonts-and-colors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fonts-and-colors"}},[this._v("#")]),this._v(" Fonts and colors")]),this._v(" "),n("chart-editor",{attrs:{code:"// <block:setup:5>\nconst DATA_COUNT = 12;\nconst MIN = 0;\nconst MAX = 100;\n\nconst numberCfg = {count: DATA_COUNT, min: MIN, max: MAX};\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  datasets: [{\n    data: Utils.numbers(numberCfg)\n  }]\n};\n// </block:setup>\n\n// <block:annotation1:1>\nconst annotation1 = {\n  type: 'label',\n  backgroundColor: 'rgba(0,0,0,0.2)',\n  borderRadius: 6,\n  borderWidth: 0,\n  callout: {\n    display: true\n  },\n  color: ['black,', 'black', 'green'],\n  content: ['March', 'is', 'annotated'],\n  font: [{size: 16, weight: 'bold'}, {family: 'courier'}],\n  position: {\n    x: 'center',\n    y: 'end'\n  },\n  xValue: 'March',\n  yAdjust: (ctx) => yOffset(ctx, 'March'),\n  yValue: (ctx) => yValue(ctx, 'March')\n};\n// </block:annotation1>\n\n// <block:annotation2:2>\nconst annotation2 = {\n  type: 'label',\n  backgroundColor: 'rgba(0,0,0,0.2)',\n  borderRadius: 6,\n  borderWidth: 0,\n  callout: {\n    display: true\n  },\n  color: ['black,', 'black', 'green'],\n  content: ['June', 'is', 'annotated'],\n  font: [{size: 16, weight: 'bold'}, {family: 'courier'}],\n  position: {\n    x: 'center',\n    y: 'end'\n  },\n  xValue: 'June',\n  yAdjust: (ctx) => yOffset(ctx, 'June'),\n  yValue: (ctx) => yValue(ctx, 'June')\n};\n// </block:annotation2>\n\n// <block:annotation3:3>\nconst annotation3 = {\n  type: 'label',\n  backgroundColor: 'rgba(0,0,0,0.2)',\n  borderRadius: 6,\n  borderWidth: 0,\n  callout: {\n    display: true\n  },\n  color: ['black,', 'black', 'green'],\n  content: ['October', 'is', 'annotated'],\n  font: [{size: 16, weight: 'bold'}, {family: 'courier'}],\n  position: {\n    x: 'center',\n    y: 'end'\n  },\n  xValue: 'October',\n  yAdjust: (ctx) => yOffset(ctx, 'October'),\n  yValue: (ctx) => yValue(ctx, 'October')\n};\n// </block:annotation3>\n\n// <block:utils:4>\nfunction yValue(ctx, label) {\n  const chart = ctx.chart;\n  const dataset = chart.data.datasets[0];\n  return dataset.data[chart.data.labels.indexOf(label)];\n}\n\nfunction yOffset(ctx, label) {\n  const value = yValue(ctx, label);\n  const chart = ctx.chart;\n  const scale = chart.scales.y;\n  const y = scale.getPixelForValue(value);\n  const lblPos = scale.getPixelForValue(100);\n  return lblPos - y - 5;\n}\n\n// </block:utils>\n\n/* <block:config:0> */\nconst config = {\n  type: 'bar',\n  data,\n  options: {\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 130,\n        min: 0,\n        grid: {\n          color: (ctx)=> ctx.tick.value <= 100 ?\n            ctx.chart.scales.x.options.grid.color :\n            undefined\n        },\n        ticks: {\n          callback: (value) => value > 100 ? '' : value\n        }\n      }\n    },\n    plugins: {\n      annotation: {\n        annotations: {\n          annotation1,\n          annotation2,\n          annotation3\n        }\n      }\n    }\n  }\n};\n/* </block:config> */\n\nconst actions = [\n  {\n    name: 'Randomize',\n    handler: function(chart) {\n      chart.data.datasets.forEach(function(dataset, i) {\n        dataset.data = dataset.data.map(() => Utils.rand(MIN, MAX));\n      });\n      chart.update();\n    }\n  }\n];\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n"}})],1)}),[],!1,null,null,null);t.default=e.exports}}]);