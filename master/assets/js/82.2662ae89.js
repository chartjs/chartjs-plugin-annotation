(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{498:function(n,t,a){"use strict";a.r(t);var e=a(4),o=Object(e.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"animation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation"}},[this._v("#")]),this._v(" Animation")]),this._v(" "),n("input",{staticStyle:{width:"100%"},attrs:{id:"update",type:"range"}}),this._v(" "),n("chart-editor",{attrs:{code:"// <block:setup:3>\nconst uniqueId = new Date().getTime();\n\nconst data = {\n  datasets: [{\n    backgroundColor: 'rgba(63, 184, 175, 0.3)',\n    borderColor: 'rgba(255, 0, 0, 0.0)',\n    pointRadius: 0, // no dots\n    tension: 0, // straight lines\n    showLine: true,\n    fill: true,\n    data: [\n      {x: 0, y: 0},\n      {x: 50, y: 0},\n      {x: 50, y: 1},\n      {x: 100, y: 1}\n    ]\n  }]\n};\n// </block:setup>\n\n// <block:annotation:1>\nconst line = {\n  type: 'line',\n  borderColor: 'red',\n  borderWidth: 3,\n  label: {\n    display: true,\n    content: 'Limit',\n    rotation: 90\n  },\n  scaleID: 'x',\n  value: 50\n};\n// </block:annotation>\n\n/* <block:config:0> */\nconst config = {\n  type: 'scatter',\n  data,\n  options: {\n    _sampleId: uniqueId,\n    plugins: {\n      annotation: {\n        annotations: {\n          line\n        }\n      }\n    }\n  }\n};\n/* </block:config> */\n\n// <block:utils:2>\ndocument.getElementById('update').addEventListener('input', update);\n\nfunction update() {\n  const newValue = +document.querySelector('input[type=range]').value;\n  const chart = Object.values(Chart.instances).find(c => c.options._sampleId === uniqueId);\n  chart.data.datasets[0].data[1].x = newValue;\n  chart.data.datasets[0].data[2].x = newValue;\n  chart.options.plugins.annotation.annotations.line.value = newValue;\n  chart.update();\n}\n// </block:utils>\n\nmodule.exports = {\n  config: config\n};\n"}})],1)}),[],!1,null,null,null);t.default=o.exports}}]);