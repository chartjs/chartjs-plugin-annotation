(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{509:function(n,t,a){"use strict";a.r(t);var e=a(4),o=Object(e.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"annotating-dataset-bars"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#annotating-dataset-bars"}},[this._v("#")]),this._v(" Annotating dataset bars")]),this._v(" "),n("chart-editor",{attrs:{code:"// <block:setup:6>\nconst DATA_COUNT = 4;\nconst MIN = 20;\nconst MAX = 100;\n\nUtils.srand(8);\n\nconst numberCfg = {count: DATA_COUNT, min: MIN, max: MAX};\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April'],\n  datasets: [{\n    data: Utils.numbers(numberCfg)\n  }]\n};\n// </block:setup>\n\n// <block:annotation1:1>\nconst annotation1 = {\n  type: 'line',\n  borderColor: 'green',\n  borderWidth: 3,\n  label: {\n    display: true,\n    backgroundColor: 'green',\n    borderRadius: 0,\n    color: 'white',\n    content: (ctx) => middleValue(ctx, 0, 0.5).toFixed(0)\n  },\n  xMax: indexToMax(0) + 0.05,\n  xMin: indexToMin(0) - 0.05,\n  xScaleID: 'x',\n  yMax: (ctx) => middleValue(ctx, 0, 0.5),\n  yMin: (ctx) => middleValue(ctx, 0, 0.5),\n  yScaleID: 'y'\n};\n// </block:annotation1>\n\n// <block:annotation2:2>\nconst annotation2 = {\n  type: 'line',\n  borderColor: 'green',\n  borderWidth: 3,\n  label: {\n    display: true,\n    backgroundColor: 'green',\n    borderRadius: 0,\n    color: 'white',\n    content: (ctx) => middleValue(ctx, 1, 0.75).toFixed(0)\n  },\n  xMax: indexToMax(1) + 0.05,\n  xMin: indexToMin(1) - 0.05,\n  xScaleID: 'x',\n  yMax: (ctx) => middleValue(ctx, 1, 0.75),\n  yMin: (ctx) => middleValue(ctx, 1, 0.75),\n  yScaleID: 'y'\n};\n// </block:annotation2>\n\n// <block:annotation3:3>\nconst annotation3 = {\n  type: 'line',\n  borderColor: 'green',\n  borderWidth: 3,\n  label: {\n    display: true,\n    backgroundColor: 'green',\n    borderRadius: 0,\n    color: 'white',\n    content: (ctx) => middleValue(ctx, 2, 1).toFixed(0)\n  },\n  xMax: indexToMax(2) + 0.05,\n  xMin: indexToMin(2) - 0.05,\n  xScaleID: 'x',\n  yMax: (ctx) => middleValue(ctx, 2, 1),\n  yMin: (ctx) => middleValue(ctx, 2, 1),\n  yScaleID: 'y'\n};\n// </block:annotation3>\n\n// <block:annotation4:4>\nconst annotation4 = {\n  type: 'line',\n  borderColor: 'green',\n  borderWidth: 3,\n  label: {\n    display: true,\n    backgroundColor: 'green',\n    borderRadius: 0,\n    color: 'white',\n    content: (ctx) => middleValue(ctx, 3, 0.25).toFixed(0)\n  },\n  xMax: indexToMax(3) + 0.05,\n  xMin: indexToMin(3) - 0.05,\n  xScaleID: 'x',\n  yMax: (ctx) => middleValue(ctx, 3, 0.25),\n  yMin: (ctx) => middleValue(ctx, 3, 0.25),\n  yScaleID: 'y'\n};\n// </block:annotation4>\n\n/* <block:config:0> */\nconst config = {\n  type: 'bar',\n  data,\n  options: {\n    plugins: {\n      annotation: {\n        annotations: {\n          annotation1,\n          annotation2,\n          annotation3,\n          annotation4\n        }\n      }\n    }\n  }\n};\n/* </block:config> */\n\n// <block:utils:5>\n// categoryPercentage is 0.8 by default\n// barPercentage is 0.9 by default\n// 1 * 0.8 * 0.9 = 0.72\n// 0.72 / 2 = 0.36\n\nfunction indexToMin(index) {\n  return index - 0.36;\n}\n\nfunction indexToMax(index) {\n  return index + 0.36;\n}\n\nfunction middleValue(ctx, index, perc) {\n  const chart = ctx.chart;\n  const dataset = chart.data.datasets[0];\n  return dataset.data[index] * perc;\n}\n// </block:utils>\n\nconst actions = [\n  {\n    name: 'Randomize',\n    handler: function(chart) {\n      chart.data.datasets.forEach(function(dataset, i) {\n        dataset.data = dataset.data.map(() => Utils.rand(MIN, MAX));\n      });\n      chart.update();\n    }\n  }\n];\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n"}})],1)}),[],!1,null,null,null);t.default=o.exports}}]);